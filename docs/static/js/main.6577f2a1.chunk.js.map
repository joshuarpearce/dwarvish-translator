{"version":3,"sources":["languageProcessor.js","App.js","reportWebVitals.js","index.js"],"names":["processText","value","source","destination","ignoredCharacters","adjustedValue","valueArray","split","translatedValue","i","length","includes","j","replace","slice","join","indexOf","dwarvishCharacters","englishCharacters","App","useState","english","setEnglish","dwarvish","setDwarvish","className","onChange","e","translator","updateEnglish","target","updateDwarvish","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAmCeA,EAnCK,WAOhB,IAPyE,IAAxDC,EAAuD,uDAA/C,GAAIC,EAA2C,uCAAnCC,EAAmC,uCAAtBC,EAAsB,uCACpEC,EAAgBJ,EAEdK,EAAaL,EAAMM,MAAM,IAE3BC,EAAkB,GAEbC,EAAI,EAAGA,EAAIH,EAAWI,QAC3B,GAAIN,EAAkBO,SAASL,EAAWG,IACtCD,GAAmBH,EAAcI,GACjCA,SAIJ,IAAK,IAAIG,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,GAAU,IAANA,EAAS,CACTP,EAAcQ,QAAQP,EAAWG,GAAI,IACrCA,GAAK,EACL,MAGJ,GACIH,EAAWI,OAASD,EAAKG,EAAI,GAC7BV,EAAOS,SAASL,EAAWQ,MAAML,EAAGA,EAAIG,GAAGG,KAAK,KAClD,CACEP,GAAmBL,EAAYD,EAAOc,QAAQV,EAAWQ,MAAML,EAAGA,EAAIG,GAAGG,KAAK,MAC9EN,GAAKG,EACL,OAKZ,MAAO,CAACP,EAAeG,I,eC1BrBJ,EAAoB,CAAC,KAErBa,EAAqB,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,IAAK,KAAM,OACtLC,EAAoB,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,iBAAQ,IAAK,OAAK,IAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,SAAK,UAkCzKC,EAhCH,WACR,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAgBA,OACI,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,0BAAUA,UAAU,UAAUC,SAAU,SAAAC,GAAC,OAlBnC,WAAiB,IACnC,EAAyCC,EADP,uDAAP,GACgCV,EAAmBD,EAAoBb,GAAlG,mBAAOC,EAAP,KAAsBG,EAAtB,KAEAc,EAAWjB,GACXmB,EAAYhB,GAc6CqB,CAAcF,EAAEG,OAAO7B,QAAQA,MAAOoB,MAEvF,qBAAKI,UAAU,iBAAf,SACI,0BAAUA,UAAU,WAAWC,SAAU,SAAAC,GAAC,OAdnC,SAAC1B,GACpB,MAAyC2B,EAAW3B,EAAOgB,EAAoBC,EAAmBd,GAAlG,mBAAOC,EAAP,KAAsBG,EAAtB,KAEAgB,EAAYnB,GACZiB,EAAWd,GAU+CuB,CAAeJ,EAAEG,OAAO7B,QAAQA,MAAOsB,YCxB1FS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6577f2a1.chunk.js","sourcesContent":["const processText = (value = '', source, destination, ignoredCharacters) => {\r\n    let adjustedValue = value;\r\n\r\n    const valueArray = value.split('');\r\n\r\n    let translatedValue = '';\r\n\r\n    for (let i = 0; i < valueArray.length;) {\r\n        if (ignoredCharacters.includes(valueArray[i])) {\r\n            translatedValue += adjustedValue[i];\r\n            i++;\r\n            continue;\r\n        }\r\n\r\n        for (let j = 5; j >= 0; j--) {\r\n            if (j === 0) {\r\n                adjustedValue.replace(valueArray[i], '');\r\n                i += 1;\r\n                break;\r\n            }\r\n\r\n            if (\r\n                valueArray.length - i > (j - 1) &&\r\n                source.includes(valueArray.slice(i, i + j).join(''))\r\n            ) {\r\n                translatedValue += destination[source.indexOf(valueArray.slice(i, i + j).join(''))];\r\n                i += j;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return [adjustedValue, translatedValue];\r\n};\r\n\r\nexport default processText;","import React, { useState } from 'react';\n\nimport translator from './languageProcessor';\n\nimport './App.css';\n\nconst ignoredCharacters = [' '];\n\nconst dwarvishCharacters = ['2', '3', '6', '8V', '8', '9', '@', '%', 'w', 'eV', 'e', 'r', 'uI,', 'a', 'd', 'f', 'g', 'l', 'll ?', ';', 'S', 'D', 'z', 'x', 'c', 'v', 'b', 'nIM', '.', '/>', 'Z ?'];\nconst englishCharacters = ['b', 'f', 'm', 'th', 't', 'd', 'r', 'sh', 'z', 'kh', 'k', 'g', 'n', 'l', 'nd', 'h', 'ʔ, ‘', 'i', 'î', 'y', 'u', 'û', 'e', 'ê', 'a', 'â', 'o', 'ô', 's', 'ə', 'ʌ'];\n\nconst App = () => {\n    const [english, setEnglish] = useState('');\n    const [dwarvish, setDwarvish] = useState('');\n\n    const updateEnglish = (value = '') => {\n        const [adjustedValue, translatedValue] = translator(value, englishCharacters, dwarvishCharacters, ignoredCharacters);\n\n        setEnglish(adjustedValue);\n        setDwarvish(translatedValue);\n    };\n\n    const updateDwarvish = (value) => {\n        const [adjustedValue, translatedValue] = translator(value, dwarvishCharacters, englishCharacters, ignoredCharacters);\n\n        setDwarvish(adjustedValue);\n        setEnglish(translatedValue);\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"translationHolder\">\n                <div className=\"textareaHolder\">\n                    <textarea className=\"english\" onChange={e => updateEnglish(e.target.value)} value={english}></textarea>\n                </div>\n                <div className=\"textareaHolder\">\n                    <textarea className=\"dwarvish\" onChange={e => updateDwarvish(e.target.value)} value={dwarvish}></textarea>\n                </div>\n            </div>\n\n        </div>\n    );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}